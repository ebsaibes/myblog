[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Emil Bsaibes",
    "section": "",
    "text": "Virtual Environments for Sanity\n\n\n\n\n\n\npython\n\n\ntooling\n\n\ndependencies\n\n\n\n\n\n\n\n\n\nMar 30, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nDefending Your Time\n\n\n\n\n\n\ndaily routines\n\n\nworklife\n\n\nhabits\n\n\ntimeblocking\n\n\n\n\n\n\n\n\n\nFeb 28, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nDaily Routines - Physical Activity\n\n\n\n\n\n\ndaily routines\n\n\nworklife\n\n\nhabits\n\n\nrunning\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nInstalling Python and starting a project using Jupyter Notebooks\n\n\n\n\n\n\npython\n\n\njupyter\n\n\ngetting started\n\n\n\n\n\n\n\n\n\nOct 31, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nSep 27, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2024-03-30/index.html",
    "href": "posts/2024-03-30/index.html",
    "title": "Virtual Environments for Sanity",
    "section": "",
    "text": "I‚Äôve programmed in python on and off for fun the past few years. Learning the language itself wasn‚Äôt difficult. What can be frustrating when learning a new language is the tooling. New languages can involve a different IDE, new libraries, new package managers, etc. it‚Äôs like entering a new world OR a new environment üòú.\nWhen I started writing in python, I just wanted to get something running. It wasn‚Äôt some huge or serious project, just something fun or quick. A concept I missed initially was virtual environments. Using them would have saved so much frustration. At times there‚Äôd be several weeks or months between working on a project. I‚Äôd come back update my packages or python itself and instead of trying out my new idea, I ended up creating a problem. The updates broke my app. Instead of moving forward with something, I‚Äôd end up fixing the app or my system environment üò¶.\n\nWhat are Virtual Environments\nA virtual environment (venv for short) is a collection of package dependencies, binaries and python interpreters which are isolated from the operating system‚Äôs python installation and other projects.\nThe virtual environment directory mimics the python base installation and typically created in the project root directory. The folder will either point to the system‚Äôs python interpreter or links to it. It also contains packages that you install while it‚Äôs activated.\nBefore writing the first line of code for a project, start by setting up the venv. It‚Äôll save you a ton of trouble and will help isolate and manage project dependencies.\nFor a deeper dive on how it works check out the official docs.\n\n\nSetting up an venv\nHere‚Äôs basic folder structure for a project. The .venv directory gets created goes in the root of the project. It should not be checked into the your source control system. It‚Äôll need to be created when the repository is cloned. Here‚Äôs how to setup your project‚Äôs virtual environment for the first time.\nYour project directory might look something like this\nproject-root \\ \n| src \\ \nFirst navigate to your root project\n$ cd project-root\nOnce in your root all you need to do to initialize the environment is:\n$ python -m venv ./venv\nThe argument to venv command is the path of the venv directory. Conventially its named ‚Äòvenv‚Äô or ‚Äò.venv‚Äô. After executing it, your project directory will look like this:\nproject-root \\ \n| src \\ \n| venv \\\nTo activate the environment (from the root of the project):\n$ ./venv/Scripts/activate\nAt this point packages can be installed without causing conflicts with other projects. As you install dependencies you can extract them and save to a file by running pip freeze:\npip freeze &gt; requirements.txt\nAdd the requirements.txt file to your code repository. The packages in the virtual environment can simply be installed by running pip install -r requirements .\n\n\nReference\nOfficial Python Docs - venv"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome",
    "section": "",
    "text": "What you can expect\nI intend this blog to be mostly a technical blog on my journey through the rest of my career. You can expect to see articles about topics in Machine Learning, .NET, C#, python and other technical topics.\nI‚Äôm not limiting the posts strictly technical topics. I have many other roles in my life besides being a software engineer and consultant. I‚Äôm a father of three, I‚Äôm a husband, I run, I build things, I fix things, I break things, I like cars the list goes on. You might see these things sprinkled in."
  },
  {
    "objectID": "posts/2023-12-11/index.html",
    "href": "posts/2023-12-11/index.html",
    "title": "Daily Routines - Physical Activity",
    "section": "",
    "text": "Although I love working from home, it‚Äôs taken some time to develop a routine to help keep me focused and provide some boundaries between work and home life. In the following series I‚Äôll describe my routines that are key to a healthy mindset and productive day.\nSome of the routines and habits I‚Äôve developed are flexible and some are less so. The first and probably most important parts of my day are running and strength training."
  },
  {
    "objectID": "posts/2023-12-11/index.html#current-iteration-of-my-workout-schedule",
    "href": "posts/2023-12-11/index.html#current-iteration-of-my-workout-schedule",
    "title": "Daily Routines - Physical Activity",
    "section": "Current iteration of my workout schedule",
    "text": "Current iteration of my workout schedule\n\n\n\nDay of Week\nWorkout\n\n\n\n\nMonday\nMorning: Weight lift (Legs)  Afternoon: Run\n\n\nTuesday\nMorning: Weight lift (Chest)  Afternoon: Run\n\n\nWednesday\nMorning: Weight lift (Back)  Afternoon: Run\n\n\nThursday\nMorning: Weight lift (Shoulders)  Afternoon: Run\n\n\nFriday\nMorning: Weight lift (Arms)  Afternoon: Run\n\n\nSaturday\nRest\n\n\nSunday\nLong Run"
  },
  {
    "objectID": "posts/2024-02-28/index.html",
    "href": "posts/2024-02-28/index.html",
    "title": "Defending Your Time",
    "section": "",
    "text": "‚ÄúAll we have to decide is what to do with the time given to us.‚Äù\n‚Äì  J.R.R. Tolkien, Fellowship of the Ring.\nLast month I wrote about making improvements to my running performance. I had to make the time for more strength training required to boost my speed, and strength overall. Fortunately, I had some established tools and habits I could lean on to help me, but before we get into them, what does defending your time mean?\nDefending your time consists of three things:\nStep 1  The easiest of the three. What do you want to do? What are your goals, hobbies, projects, and things you need to take care of? People you want to see? Write them down and prioritize them by importance.\nStep 2  Where can you fit these into your schedule? Is there anything you‚Äôre doing that is taking time away from the things you want to do? This is where I‚Äôd start to examine things that aren‚Äôt providing value. Scrolling on social media is an easy example from my own experience. A few years ago I realized that I had a habit of going to Facebook when opening a browser. It was bad - I mean I wasn‚Äôt even thinking about it. I had no intention of being on Facebook yet I would ask myself after scrolling for a minute or two or ten ‚ÄúHow the hell did I get here? What did I mean to do or look up?‚Äù. Deactivating my account was the first step and found that this simple step broke my habit and made time for more meaningful things in my life. Last year I deleted my data and account altogether.\nMaking time and Finding time do not mean the same thing. Making time puts you in control of your intentions and how to use your time. Finding time for things gives away your control and forces you to fit stuff in. The day or week isn‚Äôt going to go perfectly, things are going to happen that are out of your control and you‚Äôll find that time will fly by and your endeavor will go with it. Making the time is a simple reframing that gives you agency and permission to say no to things that don‚Äôt matter.\nStep 3  Stick to the plan. This is the hard part. This is where ‚Äúdefending‚Äù comes in. A few examples:\nWho‚Äôs in charge in these situations? The simple answer is YOU."
  },
  {
    "objectID": "posts/2024-02-28/index.html#tools",
    "href": "posts/2024-02-28/index.html#tools",
    "title": "Defending Your Time",
    "section": "Tools",
    "text": "Tools\nDefending your time is hard and doesn‚Äôt get easier the more responsibilities you take on, but there are simple tools and habits that can help you.\nThe main two tools I use are simple: My calendar and my journal.\n\nCalendar\nMy digital calendar is by far the most used and easiest to use to make time. It keeps me accountable and sets others‚Äô expectations of my availability. I described my main blocks down below.\n\n\nJournal\nThis is relatively new. I‚Äôve tried journaling on and off for years but last year I committed to Bullet Journaling and found it worked well for me. It gave me enough structure but also flexibility to make it my own.\nBesides day-to-day tasks and reminders, I use it for quotes, notes, random thoughts, and doodles. It‚Äôs nice to go back and look at them too. I went back and found my son‚Äôs diaper and feeding log when he was first born.\nHandwriting is therapeutic too. When life gets busy it‚Äôs easy to get overwhelmed. Writing my thoughts, notes and reminders gets it out of my head, and relieves some stress. I also love the satisfaction of checking off tasks from my to-do list."
  },
  {
    "objectID": "posts/2024-02-28/index.html#my-everyday-time-blocks",
    "href": "posts/2024-02-28/index.html#my-everyday-time-blocks",
    "title": "Defending Your Time",
    "section": "My Everyday Time Blocks",
    "text": "My Everyday Time Blocks\nScheduling the time in the calendar is one thing but having a purpose for each block is another. I‚Äôve made a habit of scheduling key parts of my day. These are my most used and recurring. Occasionally they‚Äôll need to shift around but the important thing is the time block moves, but is NOT deleted.\n\nFocus Time\nThis is recurring every day and happens first. I get a cup of coffee and head to my office. Cracking open my journal, I reflect on the day before. I like reflecting on the previous day in the morning. Usually, a night‚Äôs rest helps filter out a lot of the noise and I can think about only what‚Äôs most important. Occasionally I‚Äôll reflect in the evening too, just depends on the day.\nI grab two books - the Daily Dad and the Daily Stoic. I read the passage for the day from each and jot down my reflection. These ground me and help me focus on what‚Äôs most important in my life.\nAfter my daily reflections, I list and prioritize the tasks for the day. Once complete I‚Äôm ready to start my work. Morning won!\n\n\nLunch/Workout\nThis is the critical one for me. All the other time blocks are important but this one is thee block. It‚Äôs the first thing I put on any shared or digital calendar. I get a notification when it‚Äôs about time to get going. I wrap up whatever I‚Äôm doing and get outside. To make it easier to get going I often will get ready for a workout or a run beforehand. My shoes, hat, water and other gear are all prepped so there is nothing else to do but get it on and go.\n\n\nWrap-Up Time/Logoff\nTypically, this is the last thirty minutes of the work day. I wrap up the day with notes which I keep in an electronic format. They are very specific to what I‚Äôm working on and most easily referenced that way. The tool doesn‚Äôt matter but currently, my go-to is OneNote. I reflect on questions like:\n\nHow did the day go?\nWhat Happened? (What did I do today?)\n\nWhat‚Äôs Left to do?\nWhat do I need to follow up on?\n\nIt‚Äôs not super formal but I try to keep it organized by day or topic and include important technical notes and questions to follow up on etc.\n\n\nStudy Time (Power Hour)\nA few nights a week, after the kids are in bed, I work on a personal project, study up on something new, or write a blog post‚Ä¶I‚Äôm in this time block right now!\n\n\n\n\n\nI plan the time and decide the purpose for this time block in the morning. On average I get about an hour for this block if and when it happens. So I need to get going. If I want to maximize the time the last thing I want to do is try to figure out what I want or need to do with this time. That‚Äôs a surefire way to waste it.\n\n\nOther Focused Time Blocks\nIf there are tasks that require some intense focus I create similar Power Hours during the day to get the uninterrupted time I need. I‚Äôm not shy about reflecting it in my instant messenger status either. I put up a ‚ÄúDo Not Disturb‚Äù ‚õî or ‚ÄúFocus‚Äù with üéß, and I‚Äôll typically turn off notifications and close my email app. Most coworkers and teammates respect it, and don‚Äôt expect an immediate response. I‚Äôm mindful that I‚Äôm part of a team and larger organization, so I do resurface at the end of the block to respond to emails and messages I miss."
  },
  {
    "objectID": "posts/2024-02-28/index.html#its-taken-time-to-get-here",
    "href": "posts/2024-02-28/index.html#its-taken-time-to-get-here",
    "title": "Defending Your Time",
    "section": "It‚Äôs taken time to get here",
    "text": "It‚Äôs taken time to get here\nGetting to this routine involved, burn-out, trial and error, breaking bad habits, and building the confidence to really take charge of my time. I hope some of the tactics I‚Äôve implemented inspire you to examine where you‚Äôre spending time and use it intentionally.\nStart small and experiment. Focus on one thing you want to do. Does it fit into your life? If so, build up the habit of doing whatever it is little by little on a regular sustainable schedule. I saw a post the other day where someone was talking about building a habit of reading by reading 5 minutes a day. She found the time for 5 minutes and did it. She even gamified it and tries to keep the streak going.\nIf your thing doesn‚Äôt fit into your life? Ask yourself why? What‚Äôs something you can let go? Odds are there is something you‚Äôre going to have to say ‚Äúno‚Äù to, to fit this new thing in. This goes back to step one in defending your time. Here are the steps again:\n\nPrioritize what you‚Äôre doing daily. Physically write it down and order it.\nPut it in front of your face, on your calendar, anywhere you‚Äôll see it to remind you to do it.\nYou‚Äôve already thought about it now go do it.\n\nYou can do it I believe in you. ‚ù§"
  },
  {
    "objectID": "posts/2023-10-31/index.html",
    "href": "posts/2023-10-31/index.html",
    "title": "Installing Python and starting a project using Jupyter Notebooks",
    "section": "",
    "text": "Starting from the Beginning\nMy grandfather was a life long learner, he didn‚Äôt own a computer until later in life and when we got one he dove deep into understanding how it worked. You could say he started from the beginning. He often would call me with or email me with questions that were far beyond my understanding at the time and now looking back I think he was trying to challenge me to learn more as well as seek understanding for himself.\nMy dad is also a life long learner and recently asked me about learning to write programs. I gave him a book to start learning python. His questions about installation partly inspired this post.\nSo like my grandfather and my dad, I‚Äôm starting blogging from the beginning with installing python. I‚Äôve installed python half a dozen times on different machines so here‚Äôs some instructions to get python up and running on your machine.\n\n\nInstallation Steps\nThere are a few different ways to get started using Python on Windows. The two I‚Äôve used to install Python:\n\nInstalling Anaconda (which includes Python library and many popular packages, as well as some cool data science tools)\nInstalling Python using a stand-alone installer from Python.org\n\nIn this post, I‚Äôll stick with installing the stand-alone package.\n\nStep 1: Download the package\nFirst, go to https://www.Python.org/downloads/windows/ and download the latest stable version of Python. As of writing that‚Äôs version 3.12.0.\n\n\nStep 2: Install\nRun the install package. In the screenshot below notice the include Python in the system path.\n\n\n\n\n\nThis makes it easier to find when setting up your tools later. Starting Python from the command line is also easier. If you change your installation path just note that you should still add it to the system path.\n\n\nStep 3: Test\nMake sure that Python is installed properly. The easiest way is to check the version by typing python -V into the command line of your choice.\n\n\n\n\n\n\n\nStep 4: Install Jupyter Notebooks\nLearning a new programming language comes with learning a new ecosystem of tools and libraries. One that is invaluable is Jupyter Notebooks. See below for a brief description of the tool‚Äôs main features\nOnce you‚Äôve verified Python is installed. You can use pip to install Jupyter Lab.\npip install jupyterlab\nNotebooks can be used within the browser without any other tool or you can add an extension to Visual Studio Code to run them in VS Code. I alternate between the two but lately have been tending to spend more time in Visual Studio Code.\n\n\nStep 5: Start Jupyterlab and get coding\nGo to the terminal and type in jupyter lab\nAfter it launches open a new notebook and get coding.\n\n\n\nUsing Notebooks\nA notebook is organized as a series of blocks. Each block can either be executable code or just text making it easy to separate executable code from notes about that code in the same file.\nThe notebook can be executed all at once. The order it executes is top-down. OR you can run each block individually. The result of a code block is displayed directly below the block giving you immediate feedback. You can also reference blocks that have been executed before. This gives you the ability to define variables and depend on results from previous code blocks. Here‚Äôs an example:\n\n\n\n\n\nNot only do Notebooks ease the learning process but they are used in professional projects so it‚Äôs beneficial to learn to use and get comfortable with it. As you get more comfortable with the language and the tool you can make it more interactive."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I‚Äôm a dad, husband, runner, handyman and engineer.\nI‚Äôve been a software engineer for over 12 years. My career started in semiconductor manufacturing where I developed and maintained manufacturing automation systems. Eventually I found my way into software consulting.\nI‚Äôve worked on several .NET projects in a variety of industries and varying solution type. Some projects highlights include building and improving web applications, developing identity solutions, event-based systems, modernizing systems, and data engineering.\nAway from my keyboard, you‚Äôll usually find me running, hanging out with my family, fixing things around the house, and building things."
  }
]